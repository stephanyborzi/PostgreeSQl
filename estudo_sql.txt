CREATE DATABASE alura;

CREATE TABLE aluno (
    id SERIAL PRIMARY KEY,
	primeiro_nome VARCHAR(255) NOT NULL,
	ultimo_nome VARCHAR(255) NOT NULL,
	data_nascimento DATE NOT NULL
);

CREATE TABLE categoria (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL
);

CREATE TABLE curso (
    id SERIAL PRIMARY KEY,
	nome VARCHAR(255) NOT NULL,
	categoria_id INTEGER NOT NULL REFERENCES categoria(id)
);

CREATE TABLE aluno_curso (
	aluno_id INTEGER NOT NULL REFERENCES aluno(id),
	curso_id INTEGER NOT NULL REFERENCES curso(id),
	PRIMARY KEY (aluno_id, curso_id)
);INSERT INTO aluno (primeiro_nome, ultimo_nome, data_nascimento) VALUES (
	'Vinicius', 'Dias', '1997-10-15'
), (
	'Patricia', 'Freitas', '1986-10-25'
), (
	'Diogo', 'Oliveira', '1984-08-27'
), (
	'Maria', 'Rosa', '1985-01-01'
);

INSERT INTO categoria (nome) VALUES ('Front-end'), ('Programação'), ('Bancos de dados'), ('Data Science');

INSERT INTO curso (nome, categoria_id) VALUES
	('HTML', 1),
	('CSS', 1),
	('JS', 1),
	('PHP', 2),
	('Java', 2),
	('C++', 2),
	('PostgreSQL', 3),
	('MySQL', 3),
	('Oracle', 3),
	('SQL Server', 3),
	('SQLite', 3),
	('Pandas', 4),
	('Machine Learning', 4),
	('Power BI', 4);
	
INSERT INTO aluno_curso VALUES (1, 4), (1, 11), (2, 1), (2, 2), (3, 4), (3, 3), (4, 4), (4, 6), (4, 5);

select 
		aluno.primeiro_nome, 
		aluno.ultimo_nome,
		count(curso.id) as numero_curso
	from aluno
	join aluno_curso on aluno_curso.aluno_id = aluno.id
	join curso on curso.id = aluno_curso.curso_id
group by 1,2
order by numero_curso desc;


select curso.nome,
		count(aluno_curso.aluno_id) as numero_alunos
	from curso
	join aluno_curso on aluno_curso.curso_id = curso.id
group by 1
order by numero_alunos desc;


SELECT categoria.nome, categoria.id,
            COUNT(curso.id) as qtd_requisições
        from categoria
        JOIN curso ON curso.categoria_id = categoria.id
GROUP BY categoria.id
ORDER BY categoria.nome DESC
LIMIT 1;

select * from categoria
select * from aluno_curso
select * from aluno
select* from curso

SELECT (primeiro_nome ||' '|| ultimo_nome) AS nome_completo FROM aluno;
SELECT 
    UPPER(primeiro_nome || ' ' || ultimo_nome) AS nome_completo,
    EXTRACT(YEAR FROM AGE(data_nascimento)) || ' anos' AS idade
FROM aluno;
select to_char(Now(), 'dd/mm/yy') as data

create view vw_teste as SELECT (primeiro_nome ||' '|| ultimo_nome) AS nome_completo FROM aluno;
SELECT 
    UPPER(primeiro_nome || ' ' || ultimo_nome) AS nome_completo,
    EXTRACT(YEAR FROM AGE(data_nascimento)) || ' anos' AS idade
FROM aluno;
select to_char(Now(), 'dd/mm/yy') as data
